// system_cpu_0_0.v

// Generated using ACDS version 18.1 625

`timescale 1 ps / 1 ps
module system_cpu_0_0 (
		input  wire        clk_clk,                       //               clk.clk
		inout  wire [7:0]  cpu_0_custompio_0_parport,     // cpu_0_custompio_0.parport
		output wire [7:0]  cpu_0_led_export,              //         cpu_0_led.export
		input  wire        outgoing_master_waitrequest,   //   outgoing_master.waitrequest
		input  wire [31:0] outgoing_master_readdata,      //                  .readdata
		input  wire        outgoing_master_readdatavalid, //                  .readdatavalid
		output wire [0:0]  outgoing_master_burstcount,    //                  .burstcount
		output wire [31:0] outgoing_master_writedata,     //                  .writedata
		output wire [27:0] outgoing_master_address,       //                  .address
		output wire        outgoing_master_write,         //                  .write
		output wire        outgoing_master_read,          //                  .read
		output wire [3:0]  outgoing_master_byteenable,    //                  .byteenable
		output wire        outgoing_master_debugaccess,   //                  .debugaccess
		input  wire        reset_reset_n                  //             reset.reset_n
	);

	wire  [31:0] nios2_gen2_0_data_master_readdata;                           // mm_interconnect_0:nios2_gen2_0_data_master_readdata -> nios2_gen2_0:d_readdata
	wire         nios2_gen2_0_data_master_waitrequest;                        // mm_interconnect_0:nios2_gen2_0_data_master_waitrequest -> nios2_gen2_0:d_waitrequest
	wire         nios2_gen2_0_data_master_debugaccess;                        // nios2_gen2_0:debug_mem_slave_debugaccess_to_roms -> mm_interconnect_0:nios2_gen2_0_data_master_debugaccess
	wire  [29:0] nios2_gen2_0_data_master_address;                            // nios2_gen2_0:d_address -> mm_interconnect_0:nios2_gen2_0_data_master_address
	wire   [3:0] nios2_gen2_0_data_master_byteenable;                         // nios2_gen2_0:d_byteenable -> mm_interconnect_0:nios2_gen2_0_data_master_byteenable
	wire         nios2_gen2_0_data_master_read;                               // nios2_gen2_0:d_read -> mm_interconnect_0:nios2_gen2_0_data_master_read
	wire         nios2_gen2_0_data_master_readdatavalid;                      // mm_interconnect_0:nios2_gen2_0_data_master_readdatavalid -> nios2_gen2_0:d_readdatavalid
	wire         nios2_gen2_0_data_master_write;                              // nios2_gen2_0:d_write -> mm_interconnect_0:nios2_gen2_0_data_master_write
	wire  [31:0] nios2_gen2_0_data_master_writedata;                          // nios2_gen2_0:d_writedata -> mm_interconnect_0:nios2_gen2_0_data_master_writedata
	wire  [31:0] nios2_gen2_0_instruction_master_readdata;                    // mm_interconnect_0:nios2_gen2_0_instruction_master_readdata -> nios2_gen2_0:i_readdata
	wire         nios2_gen2_0_instruction_master_waitrequest;                 // mm_interconnect_0:nios2_gen2_0_instruction_master_waitrequest -> nios2_gen2_0:i_waitrequest
	wire  [29:0] nios2_gen2_0_instruction_master_address;                     // nios2_gen2_0:i_address -> mm_interconnect_0:nios2_gen2_0_instruction_master_address
	wire         nios2_gen2_0_instruction_master_read;                        // nios2_gen2_0:i_read -> mm_interconnect_0:nios2_gen2_0_instruction_master_read
	wire         nios2_gen2_0_instruction_master_readdatavalid;               // mm_interconnect_0:nios2_gen2_0_instruction_master_readdatavalid -> nios2_gen2_0:i_readdatavalid
	wire         mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_chipselect;  // mm_interconnect_0:jtag_uart_0_avalon_jtag_slave_chipselect -> jtag_uart_0:av_chipselect
	wire  [31:0] mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_readdata;    // jtag_uart_0:av_readdata -> mm_interconnect_0:jtag_uart_0_avalon_jtag_slave_readdata
	wire         mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_waitrequest; // jtag_uart_0:av_waitrequest -> mm_interconnect_0:jtag_uart_0_avalon_jtag_slave_waitrequest
	wire   [0:0] mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_address;     // mm_interconnect_0:jtag_uart_0_avalon_jtag_slave_address -> jtag_uart_0:av_address
	wire         mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_read;        // mm_interconnect_0:jtag_uart_0_avalon_jtag_slave_read -> jtag_uart_0:av_read_n
	wire         mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_write;       // mm_interconnect_0:jtag_uart_0_avalon_jtag_slave_write -> jtag_uart_0:av_write_n
	wire  [31:0] mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_writedata;   // mm_interconnect_0:jtag_uart_0_avalon_jtag_slave_writedata -> jtag_uart_0:av_writedata
	wire  [31:0] mm_interconnect_0_custom_counter_0_avalon_slave_0_readdata;  // Custom_counter_0:ReadData -> mm_interconnect_0:Custom_counter_0_avalon_slave_0_readdata
	wire   [1:0] mm_interconnect_0_custom_counter_0_avalon_slave_0_address;   // mm_interconnect_0:Custom_counter_0_avalon_slave_0_address -> Custom_counter_0:Address
	wire         mm_interconnect_0_custom_counter_0_avalon_slave_0_read;      // mm_interconnect_0:Custom_counter_0_avalon_slave_0_read -> Custom_counter_0:Read
	wire         mm_interconnect_0_custom_counter_0_avalon_slave_0_write;     // mm_interconnect_0:Custom_counter_0_avalon_slave_0_write -> Custom_counter_0:Write
	wire  [31:0] mm_interconnect_0_custom_counter_0_avalon_slave_0_writedata; // mm_interconnect_0:Custom_counter_0_avalon_slave_0_writedata -> Custom_counter_0:WriteData
	wire   [7:0] mm_interconnect_0_custompio_0_avalon_slave_0_readdata;       // CustomPIO_0:ReadData -> mm_interconnect_0:CustomPIO_0_avalon_slave_0_readdata
	wire   [2:0] mm_interconnect_0_custompio_0_avalon_slave_0_address;        // mm_interconnect_0:CustomPIO_0_avalon_slave_0_address -> CustomPIO_0:Address
	wire         mm_interconnect_0_custompio_0_avalon_slave_0_read;           // mm_interconnect_0:CustomPIO_0_avalon_slave_0_read -> CustomPIO_0:Read
	wire         mm_interconnect_0_custompio_0_avalon_slave_0_write;          // mm_interconnect_0:CustomPIO_0_avalon_slave_0_write -> CustomPIO_0:Write
	wire   [7:0] mm_interconnect_0_custompio_0_avalon_slave_0_writedata;      // mm_interconnect_0:CustomPIO_0_avalon_slave_0_writedata -> CustomPIO_0:WriteData
	wire  [31:0] mm_interconnect_0_perc_0_control_slave_readdata;             // PERC_0:readdata -> mm_interconnect_0:PERC_0_control_slave_readdata
	wire   [3:0] mm_interconnect_0_perc_0_control_slave_address;              // mm_interconnect_0:PERC_0_control_slave_address -> PERC_0:address
	wire         mm_interconnect_0_perc_0_control_slave_begintransfer;        // mm_interconnect_0:PERC_0_control_slave_begintransfer -> PERC_0:begintransfer
	wire         mm_interconnect_0_perc_0_control_slave_write;                // mm_interconnect_0:PERC_0_control_slave_write -> PERC_0:write
	wire  [31:0] mm_interconnect_0_perc_0_control_slave_writedata;            // mm_interconnect_0:PERC_0_control_slave_writedata -> PERC_0:writedata
	wire  [31:0] mm_interconnect_0_nios2_gen2_0_debug_mem_slave_readdata;     // nios2_gen2_0:debug_mem_slave_readdata -> mm_interconnect_0:nios2_gen2_0_debug_mem_slave_readdata
	wire         mm_interconnect_0_nios2_gen2_0_debug_mem_slave_waitrequest;  // nios2_gen2_0:debug_mem_slave_waitrequest -> mm_interconnect_0:nios2_gen2_0_debug_mem_slave_waitrequest
	wire         mm_interconnect_0_nios2_gen2_0_debug_mem_slave_debugaccess;  // mm_interconnect_0:nios2_gen2_0_debug_mem_slave_debugaccess -> nios2_gen2_0:debug_mem_slave_debugaccess
	wire   [8:0] mm_interconnect_0_nios2_gen2_0_debug_mem_slave_address;      // mm_interconnect_0:nios2_gen2_0_debug_mem_slave_address -> nios2_gen2_0:debug_mem_slave_address
	wire         mm_interconnect_0_nios2_gen2_0_debug_mem_slave_read;         // mm_interconnect_0:nios2_gen2_0_debug_mem_slave_read -> nios2_gen2_0:debug_mem_slave_read
	wire   [3:0] mm_interconnect_0_nios2_gen2_0_debug_mem_slave_byteenable;   // mm_interconnect_0:nios2_gen2_0_debug_mem_slave_byteenable -> nios2_gen2_0:debug_mem_slave_byteenable
	wire         mm_interconnect_0_nios2_gen2_0_debug_mem_slave_write;        // mm_interconnect_0:nios2_gen2_0_debug_mem_slave_write -> nios2_gen2_0:debug_mem_slave_write
	wire  [31:0] mm_interconnect_0_nios2_gen2_0_debug_mem_slave_writedata;    // mm_interconnect_0:nios2_gen2_0_debug_mem_slave_writedata -> nios2_gen2_0:debug_mem_slave_writedata
	wire  [31:0] mm_interconnect_0_mm_bridge_0_s0_readdata;                   // mm_bridge_0:s0_readdata -> mm_interconnect_0:mm_bridge_0_s0_readdata
	wire         mm_interconnect_0_mm_bridge_0_s0_waitrequest;                // mm_bridge_0:s0_waitrequest -> mm_interconnect_0:mm_bridge_0_s0_waitrequest
	wire         mm_interconnect_0_mm_bridge_0_s0_debugaccess;                // mm_interconnect_0:mm_bridge_0_s0_debugaccess -> mm_bridge_0:s0_debugaccess
	wire  [27:0] mm_interconnect_0_mm_bridge_0_s0_address;                    // mm_interconnect_0:mm_bridge_0_s0_address -> mm_bridge_0:s0_address
	wire         mm_interconnect_0_mm_bridge_0_s0_read;                       // mm_interconnect_0:mm_bridge_0_s0_read -> mm_bridge_0:s0_read
	wire   [3:0] mm_interconnect_0_mm_bridge_0_s0_byteenable;                 // mm_interconnect_0:mm_bridge_0_s0_byteenable -> mm_bridge_0:s0_byteenable
	wire         mm_interconnect_0_mm_bridge_0_s0_readdatavalid;              // mm_bridge_0:s0_readdatavalid -> mm_interconnect_0:mm_bridge_0_s0_readdatavalid
	wire         mm_interconnect_0_mm_bridge_0_s0_write;                      // mm_interconnect_0:mm_bridge_0_s0_write -> mm_bridge_0:s0_write
	wire  [31:0] mm_interconnect_0_mm_bridge_0_s0_writedata;                  // mm_interconnect_0:mm_bridge_0_s0_writedata -> mm_bridge_0:s0_writedata
	wire   [0:0] mm_interconnect_0_mm_bridge_0_s0_burstcount;                 // mm_interconnect_0:mm_bridge_0_s0_burstcount -> mm_bridge_0:s0_burstcount
	wire         mm_interconnect_0_sram_0_s1_chipselect;                      // mm_interconnect_0:SRAM_0_s1_chipselect -> SRAM_0:chipselect
	wire  [31:0] mm_interconnect_0_sram_0_s1_readdata;                        // SRAM_0:readdata -> mm_interconnect_0:SRAM_0_s1_readdata
	wire  [14:0] mm_interconnect_0_sram_0_s1_address;                         // mm_interconnect_0:SRAM_0_s1_address -> SRAM_0:address
	wire   [3:0] mm_interconnect_0_sram_0_s1_byteenable;                      // mm_interconnect_0:SRAM_0_s1_byteenable -> SRAM_0:byteenable
	wire         mm_interconnect_0_sram_0_s1_write;                           // mm_interconnect_0:SRAM_0_s1_write -> SRAM_0:write
	wire  [31:0] mm_interconnect_0_sram_0_s1_writedata;                       // mm_interconnect_0:SRAM_0_s1_writedata -> SRAM_0:writedata
	wire         mm_interconnect_0_sram_0_s1_clken;                           // mm_interconnect_0:SRAM_0_s1_clken -> SRAM_0:clken
	wire         mm_interconnect_0_led_0_s1_chipselect;                       // mm_interconnect_0:LED_0_s1_chipselect -> LED_0:chipselect
	wire  [31:0] mm_interconnect_0_led_0_s1_readdata;                         // LED_0:readdata -> mm_interconnect_0:LED_0_s1_readdata
	wire   [1:0] mm_interconnect_0_led_0_s1_address;                          // mm_interconnect_0:LED_0_s1_address -> LED_0:address
	wire         mm_interconnect_0_led_0_s1_write;                            // mm_interconnect_0:LED_0_s1_write -> LED_0:write_n
	wire  [31:0] mm_interconnect_0_led_0_s1_writedata;                        // mm_interconnect_0:LED_0_s1_writedata -> LED_0:writedata
	wire         mm_interconnect_0_timer_0_s1_chipselect;                     // mm_interconnect_0:timer_0_s1_chipselect -> timer_0:chipselect
	wire  [15:0] mm_interconnect_0_timer_0_s1_readdata;                       // timer_0:readdata -> mm_interconnect_0:timer_0_s1_readdata
	wire   [2:0] mm_interconnect_0_timer_0_s1_address;                        // mm_interconnect_0:timer_0_s1_address -> timer_0:address
	wire         mm_interconnect_0_timer_0_s1_write;                          // mm_interconnect_0:timer_0_s1_write -> timer_0:write_n
	wire  [15:0] mm_interconnect_0_timer_0_s1_writedata;                      // mm_interconnect_0:timer_0_s1_writedata -> timer_0:writedata
	wire         irq_mapper_receiver0_irq;                                    // CustomPIO_0:irq -> irq_mapper:receiver0_irq
	wire         irq_mapper_receiver1_irq;                                    // timer_0:irq -> irq_mapper:receiver1_irq
	wire         irq_mapper_receiver2_irq;                                    // jtag_uart_0:av_irq -> irq_mapper:receiver2_irq
	wire  [31:0] nios2_gen2_0_irq_irq;                                        // irq_mapper:sender_irq -> nios2_gen2_0:irq
	wire         rst_controller_reset_out_reset;                              // rst_controller:reset_out -> [CustomPIO_0:nReset, Custom_counter_0:nReset, LED_0:reset_n, PERC_0:reset_n, SRAM_0:reset, irq_mapper:reset, jtag_uart_0:rst_n, mm_bridge_0:reset, mm_interconnect_0:nios2_gen2_0_reset_reset_bridge_in_reset_reset, nios2_gen2_0:reset_n, rst_translator:in_reset, timer_0:reset_n]
	wire         rst_controller_reset_out_reset_req;                          // rst_controller:reset_req -> [SRAM_0:reset_req, nios2_gen2_0:reset_req, rst_translator:reset_req_in]
	wire         nios2_gen2_0_debug_reset_request_reset;                      // nios2_gen2_0:debug_reset_request -> rst_controller:reset_in1

	ParallelPort custompio_0 (
		.Clk       (clk_clk),                                                //            clock.clk
		.Address   (mm_interconnect_0_custompio_0_avalon_slave_0_address),   //   avalon_slave_0.address
		.Read      (mm_interconnect_0_custompio_0_avalon_slave_0_read),      //                 .read
		.ReadData  (mm_interconnect_0_custompio_0_avalon_slave_0_readdata),  //                 .readdata
		.Write     (mm_interconnect_0_custompio_0_avalon_slave_0_write),     //                 .write
		.WriteData (mm_interconnect_0_custompio_0_avalon_slave_0_writedata), //                 .writedata
		.ParPort   (cpu_0_custompio_0_parport),                              //      conduit_end.parport
		.nReset    (~rst_controller_reset_out_reset),                        //       reset_sink.reset_n
		.irq       (irq_mapper_receiver0_irq)                                // interrupt_sender.irq
	);

	Counter #(
		.countWidth (32)
	) custom_counter_0 (
		.Clk       (clk_clk),                                                     //          clock.clk
		.ReadData  (mm_interconnect_0_custom_counter_0_avalon_slave_0_readdata),  // avalon_slave_0.readdata
		.WriteData (mm_interconnect_0_custom_counter_0_avalon_slave_0_writedata), //               .writedata
		.Address   (mm_interconnect_0_custom_counter_0_avalon_slave_0_address),   //               .address
		.Read      (mm_interconnect_0_custom_counter_0_avalon_slave_0_read),      //               .read
		.Write     (mm_interconnect_0_custom_counter_0_avalon_slave_0_write),     //               .write
		.nReset    (~rst_controller_reset_out_reset)                              //     reset_sink.reset_n
	);

	system_cpu_0_0_LED_0 led_0 (
		.clk        (clk_clk),                               //                 clk.clk
		.reset_n    (~rst_controller_reset_out_reset),       //               reset.reset_n
		.address    (mm_interconnect_0_led_0_s1_address),    //                  s1.address
		.write_n    (~mm_interconnect_0_led_0_s1_write),     //                    .write_n
		.writedata  (mm_interconnect_0_led_0_s1_writedata),  //                    .writedata
		.chipselect (mm_interconnect_0_led_0_s1_chipselect), //                    .chipselect
		.readdata   (mm_interconnect_0_led_0_s1_readdata),   //                    .readdata
		.out_port   (cpu_0_led_export)                       // external_connection.export
	);

	system_cpu_0_0_PERC_0 perc_0 (
		.clk           (clk_clk),                                              //           clk.clk
		.reset_n       (~rst_controller_reset_out_reset),                      //         reset.reset_n
		.address       (mm_interconnect_0_perc_0_control_slave_address),       // control_slave.address
		.begintransfer (mm_interconnect_0_perc_0_control_slave_begintransfer), //              .begintransfer
		.readdata      (mm_interconnect_0_perc_0_control_slave_readdata),      //              .readdata
		.write         (mm_interconnect_0_perc_0_control_slave_write),         //              .write
		.writedata     (mm_interconnect_0_perc_0_control_slave_writedata)      //              .writedata
	);

	system_cpu_0_0_SRAM_0 sram_0 (
		.clk        (clk_clk),                                //   clk1.clk
		.address    (mm_interconnect_0_sram_0_s1_address),    //     s1.address
		.clken      (mm_interconnect_0_sram_0_s1_clken),      //       .clken
		.chipselect (mm_interconnect_0_sram_0_s1_chipselect), //       .chipselect
		.write      (mm_interconnect_0_sram_0_s1_write),      //       .write
		.readdata   (mm_interconnect_0_sram_0_s1_readdata),   //       .readdata
		.writedata  (mm_interconnect_0_sram_0_s1_writedata),  //       .writedata
		.byteenable (mm_interconnect_0_sram_0_s1_byteenable), //       .byteenable
		.reset      (rst_controller_reset_out_reset),         // reset1.reset
		.reset_req  (rst_controller_reset_out_reset_req),     //       .reset_req
		.freeze     (1'b0)                                    // (terminated)
	);

	system_cpu_0_0_jtag_uart_0 jtag_uart_0 (
		.clk            (clk_clk),                                                     //               clk.clk
		.rst_n          (~rst_controller_reset_out_reset),                             //             reset.reset_n
		.av_chipselect  (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_chipselect),  // avalon_jtag_slave.chipselect
		.av_address     (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_address),     //                  .address
		.av_read_n      (~mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_read),       //                  .read_n
		.av_readdata    (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_readdata),    //                  .readdata
		.av_write_n     (~mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_write),      //                  .write_n
		.av_writedata   (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_writedata),   //                  .writedata
		.av_waitrequest (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_waitrequest), //                  .waitrequest
		.av_irq         (irq_mapper_receiver2_irq)                                     //               irq.irq
	);

	altera_avalon_mm_bridge #(
		.DATA_WIDTH        (32),
		.SYMBOL_WIDTH      (8),
		.HDL_ADDR_WIDTH    (28),
		.BURSTCOUNT_WIDTH  (1),
		.PIPELINE_COMMAND  (1),
		.PIPELINE_RESPONSE (1)
	) mm_bridge_0 (
		.clk              (clk_clk),                                        //   clk.clk
		.reset            (rst_controller_reset_out_reset),                 // reset.reset
		.s0_waitrequest   (mm_interconnect_0_mm_bridge_0_s0_waitrequest),   //    s0.waitrequest
		.s0_readdata      (mm_interconnect_0_mm_bridge_0_s0_readdata),      //      .readdata
		.s0_readdatavalid (mm_interconnect_0_mm_bridge_0_s0_readdatavalid), //      .readdatavalid
		.s0_burstcount    (mm_interconnect_0_mm_bridge_0_s0_burstcount),    //      .burstcount
		.s0_writedata     (mm_interconnect_0_mm_bridge_0_s0_writedata),     //      .writedata
		.s0_address       (mm_interconnect_0_mm_bridge_0_s0_address),       //      .address
		.s0_write         (mm_interconnect_0_mm_bridge_0_s0_write),         //      .write
		.s0_read          (mm_interconnect_0_mm_bridge_0_s0_read),          //      .read
		.s0_byteenable    (mm_interconnect_0_mm_bridge_0_s0_byteenable),    //      .byteenable
		.s0_debugaccess   (mm_interconnect_0_mm_bridge_0_s0_debugaccess),   //      .debugaccess
		.m0_waitrequest   (outgoing_master_waitrequest),                    //    m0.waitrequest
		.m0_readdata      (outgoing_master_readdata),                       //      .readdata
		.m0_readdatavalid (outgoing_master_readdatavalid),                  //      .readdatavalid
		.m0_burstcount    (outgoing_master_burstcount),                     //      .burstcount
		.m0_writedata     (outgoing_master_writedata),                      //      .writedata
		.m0_address       (outgoing_master_address),                        //      .address
		.m0_write         (outgoing_master_write),                          //      .write
		.m0_read          (outgoing_master_read),                           //      .read
		.m0_byteenable    (outgoing_master_byteenable),                     //      .byteenable
		.m0_debugaccess   (outgoing_master_debugaccess),                    //      .debugaccess
		.s0_response      (),                                               // (terminated)
		.m0_response      (2'b00)                                           // (terminated)
	);

	system_cpu_0_0_nios2_gen2_0 nios2_gen2_0 (
		.clk                                 (clk_clk),                                                    //                       clk.clk
		.reset_n                             (~rst_controller_reset_out_reset),                            //                     reset.reset_n
		.reset_req                           (rst_controller_reset_out_reset_req),                         //                          .reset_req
		.d_address                           (nios2_gen2_0_data_master_address),                           //               data_master.address
		.d_byteenable                        (nios2_gen2_0_data_master_byteenable),                        //                          .byteenable
		.d_read                              (nios2_gen2_0_data_master_read),                              //                          .read
		.d_readdata                          (nios2_gen2_0_data_master_readdata),                          //                          .readdata
		.d_waitrequest                       (nios2_gen2_0_data_master_waitrequest),                       //                          .waitrequest
		.d_write                             (nios2_gen2_0_data_master_write),                             //                          .write
		.d_writedata                         (nios2_gen2_0_data_master_writedata),                         //                          .writedata
		.d_readdatavalid                     (nios2_gen2_0_data_master_readdatavalid),                     //                          .readdatavalid
		.debug_mem_slave_debugaccess_to_roms (nios2_gen2_0_data_master_debugaccess),                       //                          .debugaccess
		.i_address                           (nios2_gen2_0_instruction_master_address),                    //        instruction_master.address
		.i_read                              (nios2_gen2_0_instruction_master_read),                       //                          .read
		.i_readdata                          (nios2_gen2_0_instruction_master_readdata),                   //                          .readdata
		.i_waitrequest                       (nios2_gen2_0_instruction_master_waitrequest),                //                          .waitrequest
		.i_readdatavalid                     (nios2_gen2_0_instruction_master_readdatavalid),              //                          .readdatavalid
		.irq                                 (nios2_gen2_0_irq_irq),                                       //                       irq.irq
		.debug_reset_request                 (nios2_gen2_0_debug_reset_request_reset),                     //       debug_reset_request.reset
		.debug_mem_slave_address             (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_address),     //           debug_mem_slave.address
		.debug_mem_slave_byteenable          (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_byteenable),  //                          .byteenable
		.debug_mem_slave_debugaccess         (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_debugaccess), //                          .debugaccess
		.debug_mem_slave_read                (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_read),        //                          .read
		.debug_mem_slave_readdata            (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_readdata),    //                          .readdata
		.debug_mem_slave_waitrequest         (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_waitrequest), //                          .waitrequest
		.debug_mem_slave_write               (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_write),       //                          .write
		.debug_mem_slave_writedata           (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_writedata),   //                          .writedata
		.dummy_ci_port                       ()                                                            // custom_instruction_master.readra
	);

	system_cpu_0_0_timer_0 timer_0 (
		.clk        (clk_clk),                                 //   clk.clk
		.reset_n    (~rst_controller_reset_out_reset),         // reset.reset_n
		.address    (mm_interconnect_0_timer_0_s1_address),    //    s1.address
		.writedata  (mm_interconnect_0_timer_0_s1_writedata),  //      .writedata
		.readdata   (mm_interconnect_0_timer_0_s1_readdata),   //      .readdata
		.chipselect (mm_interconnect_0_timer_0_s1_chipselect), //      .chipselect
		.write_n    (~mm_interconnect_0_timer_0_s1_write),     //      .write_n
		.irq        (irq_mapper_receiver1_irq)                 //   irq.irq
	);

	system_cpu_0_0_mm_interconnect_0 mm_interconnect_0 (
		.clk_0_clk_clk                                  (clk_clk),                                                     //                                clk_0_clk.clk
		.nios2_gen2_0_reset_reset_bridge_in_reset_reset (rst_controller_reset_out_reset),                              // nios2_gen2_0_reset_reset_bridge_in_reset.reset
		.nios2_gen2_0_data_master_address               (nios2_gen2_0_data_master_address),                            //                 nios2_gen2_0_data_master.address
		.nios2_gen2_0_data_master_waitrequest           (nios2_gen2_0_data_master_waitrequest),                        //                                         .waitrequest
		.nios2_gen2_0_data_master_byteenable            (nios2_gen2_0_data_master_byteenable),                         //                                         .byteenable
		.nios2_gen2_0_data_master_read                  (nios2_gen2_0_data_master_read),                               //                                         .read
		.nios2_gen2_0_data_master_readdata              (nios2_gen2_0_data_master_readdata),                           //                                         .readdata
		.nios2_gen2_0_data_master_readdatavalid         (nios2_gen2_0_data_master_readdatavalid),                      //                                         .readdatavalid
		.nios2_gen2_0_data_master_write                 (nios2_gen2_0_data_master_write),                              //                                         .write
		.nios2_gen2_0_data_master_writedata             (nios2_gen2_0_data_master_writedata),                          //                                         .writedata
		.nios2_gen2_0_data_master_debugaccess           (nios2_gen2_0_data_master_debugaccess),                        //                                         .debugaccess
		.nios2_gen2_0_instruction_master_address        (nios2_gen2_0_instruction_master_address),                     //          nios2_gen2_0_instruction_master.address
		.nios2_gen2_0_instruction_master_waitrequest    (nios2_gen2_0_instruction_master_waitrequest),                 //                                         .waitrequest
		.nios2_gen2_0_instruction_master_read           (nios2_gen2_0_instruction_master_read),                        //                                         .read
		.nios2_gen2_0_instruction_master_readdata       (nios2_gen2_0_instruction_master_readdata),                    //                                         .readdata
		.nios2_gen2_0_instruction_master_readdatavalid  (nios2_gen2_0_instruction_master_readdatavalid),               //                                         .readdatavalid
		.Custom_counter_0_avalon_slave_0_address        (mm_interconnect_0_custom_counter_0_avalon_slave_0_address),   //          Custom_counter_0_avalon_slave_0.address
		.Custom_counter_0_avalon_slave_0_write          (mm_interconnect_0_custom_counter_0_avalon_slave_0_write),     //                                         .write
		.Custom_counter_0_avalon_slave_0_read           (mm_interconnect_0_custom_counter_0_avalon_slave_0_read),      //                                         .read
		.Custom_counter_0_avalon_slave_0_readdata       (mm_interconnect_0_custom_counter_0_avalon_slave_0_readdata),  //                                         .readdata
		.Custom_counter_0_avalon_slave_0_writedata      (mm_interconnect_0_custom_counter_0_avalon_slave_0_writedata), //                                         .writedata
		.CustomPIO_0_avalon_slave_0_address             (mm_interconnect_0_custompio_0_avalon_slave_0_address),        //               CustomPIO_0_avalon_slave_0.address
		.CustomPIO_0_avalon_slave_0_write               (mm_interconnect_0_custompio_0_avalon_slave_0_write),          //                                         .write
		.CustomPIO_0_avalon_slave_0_read                (mm_interconnect_0_custompio_0_avalon_slave_0_read),           //                                         .read
		.CustomPIO_0_avalon_slave_0_readdata            (mm_interconnect_0_custompio_0_avalon_slave_0_readdata),       //                                         .readdata
		.CustomPIO_0_avalon_slave_0_writedata           (mm_interconnect_0_custompio_0_avalon_slave_0_writedata),      //                                         .writedata
		.jtag_uart_0_avalon_jtag_slave_address          (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_address),     //            jtag_uart_0_avalon_jtag_slave.address
		.jtag_uart_0_avalon_jtag_slave_write            (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_write),       //                                         .write
		.jtag_uart_0_avalon_jtag_slave_read             (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_read),        //                                         .read
		.jtag_uart_0_avalon_jtag_slave_readdata         (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_readdata),    //                                         .readdata
		.jtag_uart_0_avalon_jtag_slave_writedata        (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_writedata),   //                                         .writedata
		.jtag_uart_0_avalon_jtag_slave_waitrequest      (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_waitrequest), //                                         .waitrequest
		.jtag_uart_0_avalon_jtag_slave_chipselect       (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_chipselect),  //                                         .chipselect
		.LED_0_s1_address                               (mm_interconnect_0_led_0_s1_address),                          //                                 LED_0_s1.address
		.LED_0_s1_write                                 (mm_interconnect_0_led_0_s1_write),                            //                                         .write
		.LED_0_s1_readdata                              (mm_interconnect_0_led_0_s1_readdata),                         //                                         .readdata
		.LED_0_s1_writedata                             (mm_interconnect_0_led_0_s1_writedata),                        //                                         .writedata
		.LED_0_s1_chipselect                            (mm_interconnect_0_led_0_s1_chipselect),                       //                                         .chipselect
		.mm_bridge_0_s0_address                         (mm_interconnect_0_mm_bridge_0_s0_address),                    //                           mm_bridge_0_s0.address
		.mm_bridge_0_s0_write                           (mm_interconnect_0_mm_bridge_0_s0_write),                      //                                         .write
		.mm_bridge_0_s0_read                            (mm_interconnect_0_mm_bridge_0_s0_read),                       //                                         .read
		.mm_bridge_0_s0_readdata                        (mm_interconnect_0_mm_bridge_0_s0_readdata),                   //                                         .readdata
		.mm_bridge_0_s0_writedata                       (mm_interconnect_0_mm_bridge_0_s0_writedata),                  //                                         .writedata
		.mm_bridge_0_s0_burstcount                      (mm_interconnect_0_mm_bridge_0_s0_burstcount),                 //                                         .burstcount
		.mm_bridge_0_s0_byteenable                      (mm_interconnect_0_mm_bridge_0_s0_byteenable),                 //                                         .byteenable
		.mm_bridge_0_s0_readdatavalid                   (mm_interconnect_0_mm_bridge_0_s0_readdatavalid),              //                                         .readdatavalid
		.mm_bridge_0_s0_waitrequest                     (mm_interconnect_0_mm_bridge_0_s0_waitrequest),                //                                         .waitrequest
		.mm_bridge_0_s0_debugaccess                     (mm_interconnect_0_mm_bridge_0_s0_debugaccess),                //                                         .debugaccess
		.nios2_gen2_0_debug_mem_slave_address           (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_address),      //             nios2_gen2_0_debug_mem_slave.address
		.nios2_gen2_0_debug_mem_slave_write             (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_write),        //                                         .write
		.nios2_gen2_0_debug_mem_slave_read              (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_read),         //                                         .read
		.nios2_gen2_0_debug_mem_slave_readdata          (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_readdata),     //                                         .readdata
		.nios2_gen2_0_debug_mem_slave_writedata         (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_writedata),    //                                         .writedata
		.nios2_gen2_0_debug_mem_slave_byteenable        (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_byteenable),   //                                         .byteenable
		.nios2_gen2_0_debug_mem_slave_waitrequest       (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_waitrequest),  //                                         .waitrequest
		.nios2_gen2_0_debug_mem_slave_debugaccess       (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_debugaccess),  //                                         .debugaccess
		.PERC_0_control_slave_address                   (mm_interconnect_0_perc_0_control_slave_address),              //                     PERC_0_control_slave.address
		.PERC_0_control_slave_write                     (mm_interconnect_0_perc_0_control_slave_write),                //                                         .write
		.PERC_0_control_slave_readdata                  (mm_interconnect_0_perc_0_control_slave_readdata),             //                                         .readdata
		.PERC_0_control_slave_writedata                 (mm_interconnect_0_perc_0_control_slave_writedata),            //                                         .writedata
		.PERC_0_control_slave_begintransfer             (mm_interconnect_0_perc_0_control_slave_begintransfer),        //                                         .begintransfer
		.SRAM_0_s1_address                              (mm_interconnect_0_sram_0_s1_address),                         //                                SRAM_0_s1.address
		.SRAM_0_s1_write                                (mm_interconnect_0_sram_0_s1_write),                           //                                         .write
		.SRAM_0_s1_readdata                             (mm_interconnect_0_sram_0_s1_readdata),                        //                                         .readdata
		.SRAM_0_s1_writedata                            (mm_interconnect_0_sram_0_s1_writedata),                       //                                         .writedata
		.SRAM_0_s1_byteenable                           (mm_interconnect_0_sram_0_s1_byteenable),                      //                                         .byteenable
		.SRAM_0_s1_chipselect                           (mm_interconnect_0_sram_0_s1_chipselect),                      //                                         .chipselect
		.SRAM_0_s1_clken                                (mm_interconnect_0_sram_0_s1_clken),                           //                                         .clken
		.timer_0_s1_address                             (mm_interconnect_0_timer_0_s1_address),                        //                               timer_0_s1.address
		.timer_0_s1_write                               (mm_interconnect_0_timer_0_s1_write),                          //                                         .write
		.timer_0_s1_readdata                            (mm_interconnect_0_timer_0_s1_readdata),                       //                                         .readdata
		.timer_0_s1_writedata                           (mm_interconnect_0_timer_0_s1_writedata),                      //                                         .writedata
		.timer_0_s1_chipselect                          (mm_interconnect_0_timer_0_s1_chipselect)                      //                                         .chipselect
	);

	system_cpu_0_0_irq_mapper irq_mapper (
		.clk           (clk_clk),                        //       clk.clk
		.reset         (rst_controller_reset_out_reset), // clk_reset.reset
		.receiver0_irq (irq_mapper_receiver0_irq),       // receiver0.irq
		.receiver1_irq (irq_mapper_receiver1_irq),       // receiver1.irq
		.receiver2_irq (irq_mapper_receiver2_irq),       // receiver2.irq
		.sender_irq    (nios2_gen2_0_irq_irq)            //    sender.irq
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (2),
		.OUTPUT_RESET_SYNC_EDGES   ("deassert"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (1),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) rst_controller (
		.reset_in0      (~reset_reset_n),                         // reset_in0.reset
		.reset_in1      (nios2_gen2_0_debug_reset_request_reset), // reset_in1.reset
		.clk            (clk_clk),                                //       clk.clk
		.reset_out      (rst_controller_reset_out_reset),         // reset_out.reset
		.reset_req      (rst_controller_reset_out_reset_req),     //          .reset_req
		.reset_req_in0  (1'b0),                                   // (terminated)
		.reset_req_in1  (1'b0),                                   // (terminated)
		.reset_in2      (1'b0),                                   // (terminated)
		.reset_req_in2  (1'b0),                                   // (terminated)
		.reset_in3      (1'b0),                                   // (terminated)
		.reset_req_in3  (1'b0),                                   // (terminated)
		.reset_in4      (1'b0),                                   // (terminated)
		.reset_req_in4  (1'b0),                                   // (terminated)
		.reset_in5      (1'b0),                                   // (terminated)
		.reset_req_in5  (1'b0),                                   // (terminated)
		.reset_in6      (1'b0),                                   // (terminated)
		.reset_req_in6  (1'b0),                                   // (terminated)
		.reset_in7      (1'b0),                                   // (terminated)
		.reset_req_in7  (1'b0),                                   // (terminated)
		.reset_in8      (1'b0),                                   // (terminated)
		.reset_req_in8  (1'b0),                                   // (terminated)
		.reset_in9      (1'b0),                                   // (terminated)
		.reset_req_in9  (1'b0),                                   // (terminated)
		.reset_in10     (1'b0),                                   // (terminated)
		.reset_req_in10 (1'b0),                                   // (terminated)
		.reset_in11     (1'b0),                                   // (terminated)
		.reset_req_in11 (1'b0),                                   // (terminated)
		.reset_in12     (1'b0),                                   // (terminated)
		.reset_req_in12 (1'b0),                                   // (terminated)
		.reset_in13     (1'b0),                                   // (terminated)
		.reset_req_in13 (1'b0),                                   // (terminated)
		.reset_in14     (1'b0),                                   // (terminated)
		.reset_req_in14 (1'b0),                                   // (terminated)
		.reset_in15     (1'b0),                                   // (terminated)
		.reset_req_in15 (1'b0)                                    // (terminated)
	);

endmodule
